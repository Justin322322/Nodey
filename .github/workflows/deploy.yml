name: Deploy

on:
  push:
    branches: 
      - main
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  # Only deploy from main to production, or staging branch to staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment:
      name: staging
      url: https://nodey-staging.vercel.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for staging
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_ENV: staging
          
      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prebuilt'
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          alias-domains: |
            nodey-staging.vercel.app

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://nodey.vercel.app
    needs: []  # Add staging deployment as dependency if needed
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run full test suite
        run: |
          npm run typecheck
          npm run lint
          npm test
          npm run build
          
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod --prebuilt'
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./

  # Prevent deployment from feature branches
  block-feature-deployment:
    name: Block Feature Branch Deployment
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/heads/feature/') ||
      startsWith(github.ref, 'refs/heads/fix/') ||
      startsWith(github.ref, 'refs/heads/hotfix/')
    
    steps:
      - name: Block deployment
        run: |
          echo "ðŸš« Deployment blocked for feature branch: ${{ github.ref }}"
          echo "Feature branches cannot be deployed directly."
          echo "Please create a PR to merge into main or staging branch."
          exit 1
