name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  validate-pr:
    name: Validate PR Requirements (Optional)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    continue-on-error: true  # Don't fail the entire workflow if this fails
    
    steps:
      - name: Check PR title (optional check)
        continue-on-error: true  # Don't fail if title doesn't match
        run: |
          echo "üìù PR Title: ${{ github.event.pull_request.title }}"
          echo "‚úÖ This is now an optional check - any title format is accepted"
          echo "üí° Recommended format: 'type: description' (e.g., 'fix: resolve deployment issue')"

  code-quality:
    name: Code Quality Checks  
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run typecheck
        
      - name: Lint check
        run: npm run lint
        
      - name: Test
        run: npm test
        
      - name: Build check
        run: npm run build
        
      - name: Check for TypeScript strict compliance (warning only)
        continue-on-error: true
        run: |
          echo "‚ö†Ô∏è  Checking for 'any' types in new/modified files (warning only)..."
          git diff --name-only origin/main...HEAD | grep -E '\.(ts|tsx)$' | xargs grep -l 'any' && echo "‚ö†Ô∏è  Found 'any' types - consider using specific types for better code quality" || echo "‚úÖ No 'any' types found - good!"
          
      - name: Check for console.log (warning only)
        continue-on-error: true
        run: |
          echo "‚ö†Ô∏è  Checking for console.log statements (warning only)..."
          git diff --name-only origin/main...HEAD | grep -E '\.(ts|tsx)$' | grep -v '.test.' | xargs grep -l 'console\.log' && echo "‚ö†Ô∏è  Found console.log statements - consider removing for production" || echo "‚úÖ No console.log found - good!"

  accessibility-check:
    name: Accessibility Compliance (Optional)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    continue-on-error: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for accessibility testing
        run: npm run build
        
      - name: Check for accessibility patterns (warning only)
        continue-on-error: true
        run: |
          echo "‚ö†Ô∏è  Checking for semantic HTML and accessibility patterns (warning only)..."
          git diff --name-only origin/main...HEAD | grep -E '\.(tsx)$' | xargs grep -l 'onClick.*div\|onClick.*span' && echo "‚ö†Ô∏è  Found onClick on non-semantic elements. Consider using button elements for better accessibility." || echo "‚úÖ Semantic elements check passed!"

  template-validation:
    name: Validate Workflow Templates
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.changed_files, 'templates/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate template structure
        run: |
          echo "Validating workflow templates..."
          for template_dir in templates/*/; do
            if [ -d "$template_dir" ] && [ "$template_dir" != "templates/" ]; then
              template_name=$(basename "$template_dir")
              if [ ! -f "$template_dir/index.ts" ]; then
                echo "Error: Template $template_name missing index.ts"
                exit 1
              fi
              echo "‚úì Template $template_name structure valid"
            fi
          done
          
      - name: Type check templates
        run: |
          echo "Type checking templates..."
          npm run typecheck
