name: CI

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Verify Vitest config
        run: |
          echo "Checking Vitest configuration..."
          cat vitest.config.mjs
          echo "Node.js version:"
          node --version
          echo "npm version:"
          npm --version
        
      - name: Strict Type check (Ban any types)
        run: npm run typecheck:strict
        
      - name: Strict Lint (Zero warnings, ban any types)
        run: npm run lint:strict
        
      - name: Check for prohibited any types
        run: |
          echo "üîç Scanning for prohibited 'any' types..."
          
          # Count any types without eslint-disable comments
          ANY_COUNT=$(find . -name "*.ts" -o -name "*.tsx" | \
            grep -v node_modules | \
            grep -v ".next" | \
            xargs grep -n ': any\|as any\|<any>' | \
            grep -v 'eslint-disable' | \
            wc -l || echo "0")
          
          echo "Found $ANY_COUNT prohibited 'any' types"
          
          if [ "$ANY_COUNT" -gt 0 ]; then
            echo "‚ùå ERROR: Found prohibited 'any' types without eslint-disable comments:"
            find . -name "*.ts" -o -name "*.tsx" | \
              grep -v node_modules | \
              grep -v ".next" | \
              xargs grep -n ': any\|as any\|<any>' | \
              grep -v 'eslint-disable' || true
            echo ""
            echo "üí° Either add proper types or use eslint-disable comment for legitimate cases:"
            echo "   // eslint-disable-next-line @typescript-eslint/no-explicit-any"
            exit 1
          fi
          
          echo "‚úÖ No prohibited 'any' types found!"
        
      - name: Run tests
        run: npm test
        
      - name: Build with strict checks
        run: npm run build:ci
        
      - name: Check for build artifacts
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed - .next directory not found"
            exit 1
          fi
          echo "Build successful"

  dependency-review:
    name: Dependency Review (Optional)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    continue-on-error: true  # Don't fail workflow on dependency issues
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Dependency Review (warning only)
        continue-on-error: true
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical  # Only fail on critical issues, not moderate
